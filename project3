data_part1 = data_users.merge(id_calls, on=['user_id'], how='outer')

data_part1.head()


data_part2 = data_part1.merge(id_message, on='user_id', how='outer')

data_part2.head()

data_part3 = data_part2.merge(id_internet, on='user_id', how='outer')

data_part3.head()

# переименовываем столбец "tariff_name" в датафрейме data_tariffs, для дальнейшего объедиенния таблиц

data_tariffs = data_tariffs.rename(columns = {"tariff_name":"tariff"})


# объединяем табицу data_part3 и data_tariffs

data = data_part3.merge(data_tariffs, on='tariff', how='outer')

#data = data.sort_values('user_id')

data.head()


# проверяем датафрейм на наличие пропущенных значений

data.isna().sum()

# Создадим новый датафрейм содержащий в себе информацию по поводу тарифа и id пользователя 

id_1 = data_users[['user_id', 'tariff']] 

# Функция для подсчета стоимости тарифа в месяц по пользователям

def megaline_income(row):
    call_duration = row['call_duration']
    message_count = row['message_count']
    internet_used = row['mb_used']
    tariff = row['tariff']
 
    # рассчитаем доходность тарифа "Смарт"
    if tariff == 'smart':
        # стоимость звонков сверх тарифа
        call_duration_add = (call_duration - tariffs.loc[0, 'minutes_included'])\
        *tariffs.loc[0, 'rub_per_minute']
 
        # стоимость смс сверх тарифа
        message_count_add = (message_count - tariffs.loc[0, 'messages_included'])\
        *tariffs.loc[0, 'rub_per_message']
 
        # стоимость интернета сверх тарифа
        internet_add = (internet_used - tariffs.loc[0, 'mb_per_month_included'])\
        *tariffs.loc[0, 'rub_per_gb']/1024
 
        # когда израсходованных услуг меньше лимита, значение равняется 0
        if call_duration_add < 0:
            call_duration_add = 0
        if message_count_add < 0:
            message_count_add = 0
        if internet_add < 0:
            internet_add = 0
 
        # общий доход от тарифа "Смарт"
        total_income = call_duration_add + message_count_add + internet_add + tariffs.loc[0, 'rub_monthly_fee']
 
    # рассчитаем доходность тарифа "Ультра"
    elif tariff == 'ultra':
        # стоимость звонков сверх тарифа
        call_duration_add = (call_duration - tariffs.loc[1, 'minutes_included'])\
        *tariffs.loc[0, 'rub_per_minute']
 
        # стоимость смс сверх тарифа
        message_count_add = (message_count - tariffs.loc[1, 'messages_included'])\
        *tariffs.loc[0, 'rub_per_message']
 
        # стоимость интернета сверх тарифа
        internet_add = (internet_used - tariffs.loc[1, 'mb_per_month_included'])\
        *tariffs.loc[0, 'rub_per_gb']/1024
 
        # когда израсходованных услуг меньше лимита, значение равняется 0
        if call_duration_add < 0:
            call_duration_add = 0
        if message_count_add < 0:
            message_count_add = 0
        if internet_add < 0:
            internet_add = 0
 
        # общий доход от тарифа "Ультра"
        total_income = call_duration_add + message_count_add + internet_add + tariffs.loc[1, 'rub_monthly_fee']
 
    return total_income.round(decimals=2)
 
# применим функцию ко всем строкам сгруппированной по месяцам таблицы с использованием услуг связи 
megaline_data['income'] = megaline_data.apply(megaline_income, axis=1)
